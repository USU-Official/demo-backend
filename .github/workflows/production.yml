name: Java CI with Maven

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    steps:
      - name: Config SSH & Update Docker
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ecdsa
          echo "$SSH_PUBLIC_KEY" > ~/.ssh/id_ecdsa.pub
          echo "$SSH_PUBLIC_CERT_KEY" > ~/.ssh/id_ecdsa-cert.pub
          chmod 600 ~/.ssh/id_ecdsa
          chmod 600 ~/.ssh/id_ecdsa.pub
          chmod 600 ~/.ssh/id_ecdsa-cert.pub
          cat >>~/.ssh/config <<END
          Host $SSH_HOST
            User $SSH_USER
            Port 2212
            Hostname $SSH_SERVER_HOST
            IdentityFile ~/.ssh/id_ecdsa
            StrictHostKeyChecking no
          END
          ssh $SSH_HOST 'docker login ghcr.io -u falcom0 -p ${{ secrets.GITHUB_TOKEN }}'
          ssh $SSH_HOST 'docker image pull ghcr.io/usu-official/${{ secrets.APP_NAME }}-backend:main'
          ssh $SSH_HOST 'docker stack deploy -c /home/clusterdb/workspace/${{ secrets.APP_NAME }}/${{ secrets.APP_NAME }}_stack.yml --with-registry-auth ${{ secrets.APP_NAME }}'
        env:
          SSH_USER: ${{ secrets.USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.HOST }}
          SSH_PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
          SSH_PUBLIC_CERT_KEY: ${{ secrets.PUBLIC_CERT_KEY }}
          SSH_SERVER_HOST: ${{ secrets.SERVER_HOST }}
